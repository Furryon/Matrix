const CHARACTERS =
  "アァカサタナハマヤャラワガザダバパイィキシチニヒミリヰギジヂビピウゥクスツヌフムユュルグズブヅプエェケセテネヘメレヱゲゼデベペオォコソトホモヨョロヲゴゾドボポヴッン";
export class Column { //Создаём класс, чтобы функция animete срабатывала на каждом
  constructor(x, fontSize, canvasHeight, context) { // Контруктор, в который передаём параментры,чтобы потом создать дочерний элемент от него и передать свои параметры
    this.x = x; // Присваиваем параметры ввёденые в constructor свои переменные. Т.е для x которое создадим в дочернем элементе, присвоится x;
    this.y = 0; //Y мы не будем передавать в дочернем элементе, он автоматически присвоится, со значением 0
    this.context = context;
    this.fontSize = fontSize;
    this.canvasHeight = canvasHeight;
  }
  drawSymbol() { //Функция которая возвращает случайную букву из CHARACTERS
    if (this.y === 0 && Math.random() < 0.98) { //Анимация, рандомных букв в столбцах, если начало выхода букв y будет равно нулю и случайное число < 0.98 то возвращаем 
      return;
    }
    const characterIndex = Math.floor(Math.random() * CHARACTERS.length); //В переменную characterIndex, помещаем рандомное индекс(если рандомное число от 0 до 1, умножить на длину CHARACTERS и округлить до целого числа) получим случайный индекс буквы )
    const symbol = CHARACTERS[characterIndex]; // Потом просто вызовим эту бувку по её индексу [0]-ア и т д
    this.context.fillText(symbol, this.x, this.y); //Передаём в context случайную букву и чтобы она отобразилась на экране 
    this.y += this.fontSize; //Присваеим текущему элементу y текущему размеру
    if (this.y > this.canvasHeight) { //Делаем проверку, если длина по вертикале для букв больще высоте экрана, то однуляем высоту и запускается с самого начала y=0
      this.y = 0;
    } else {
      this.y += this.fontSize; //Если не дошло до высоты, то продолжаем увеличивать расстояние по y
    }
  }
}
